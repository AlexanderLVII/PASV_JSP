Вложенные циклы
1.	Таблица из чисел: n строк по 5 чисел
Напишите функцию с именем numericalTable, которая принимает число n в качестве аргумента и возвращает таблицу чисел от 1 до n. Каждая строка содержит 5 чисел, разделенных пробелом. Все строки кроме последней, заканчиваются символом \n перевода строки
function numericalTable(n){
let str = '';
for (let i = 1; i <= n; i++){
  for (let j = 1; j <= 4; j++){
    str = str + i + ' ';
  }
  str = str + i;
  if (i !== n ) {
    str = str + '\n';
  }
}
return str;
}
2.	Еще одна таблица из чисел: `n` строк по `m` чисел в каждой строке

которая принимает числа n и m в качестве аргументов и возвращает таблицу чисел от 1 до n. Каждая строка содержит m чисел, разделенных пробелом. Все строки кроме последней, заканчиваются символом \n
function numericalTable(n, m){
let str = '';
for (let i = 1; i <= n; i++){
  for (let j = 1; j < m; j++){
    str = str + i + ' ';
  }
  str = str + i;
  if (i !== n ) {
    str = str + '\n';
  }
}
return str;
}
3.	Числовой треугольник
которая принимает число n в качестве аргумента и возвращает треугольник из чисел от 1 до n, разделенных пробелом. Все строки кроме последней, заканчиваются символом \n
function numericalTriangle(n){
let str = '';
for (let i = 1; i <= n; i++){
  for (let j = 1; j < i; j++){
    str = str + i + ' ';
  }
  str = str + i;
  if (i !== n ) {
    str = str + '\n';
  }
}
return str;
}

4.	Треугольник из звездочек
которая принимает число n в качестве аргумента и возвращает треугольник из n строк, состоящих из звездочек (*). Все строки кроме последней, заканчиваются символом \n
"*\n**\n***\n****\n*****\n******\n*******"
function starTriangle(n){
let str = '';
for (let i = 1; i <= n; i++){
  for (let j = 1; j < i; j++){
    str = str + '*' ;
  }
  str = str + '*';
  if (i !== n ) {
    str = str + '\n';
  }
}
return str;
}

5.	Суммы элементов в двухмерном массиве.
 которая принимает двухмерный массив arr в качестве аргумента и возвращает массив, содержащий суммы элементов вложенных массивов.
function sumsInArray(arr){
let sum = 0;
let out =[];
for (let i = 0; i <= arr.length-1; i++){
  for (let j = 0; j < arr[i].length; j++){
    sum += arr[i][j] ;
  }
  out.push(sum);
  sum = 0;
}
return out;
}

6.	Перевернутый треугольник из звездочек
которая принимает число n в качестве аргумента и возвращает треугольник из n строк, состоящих из звездочек (*). В первой строке n звездочек, во второй - (n-1) звездочка, ... , в последней строке 1 звездочка.
Все строки кроме последней, заканчиваются символом \n
"*****\n****\n***\n**\n*"
function upsideDown(n){
let str = '';
for (let i = 1; i <=n; i++){
  for (let j = 1; j <= n-i; j++){
    str = str + '*' ;
  }
  str = str + '*';
  if (i !== n ) {
    str = str + '\n';
  }
}
return str;
}


7.	Дан двухмерный массив. Найти количество строк, в которых есть отрицательные элементы.
которая принимает двухмерный массив arr в качестве аргумента и возвращает количество строк, содержащих хотя бы один отрицательный элемент.
функция countLinesWithNegativeElements([[1, 2], [2, -2, -3], [3, 5], [3, 4, 5, -1, 8]]) должна возвратить 2; (так как только две строки (два элемента массива) имеют отрицательные элементы: [2, -2, -3], [3, 4, 5, -1, 8].
function countLinesWithNegativeElements(arr){
let sum = 0;
for (let i = 0; i <= arr.length-1; i++){
  for (let j = 0; j <= arr[i].length; j++){
    if (arr[i][j] < 0) {  
      sum++ ;
      break;
    }
  }
}
return sum;
}
