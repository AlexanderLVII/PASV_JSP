//Math.log() – Логарифм числа
//1.	Является ли данное число n степенью числа 2?
//Напишите функцию с именем isPowerOfTwo, которая принимает неотрицательное число n в качестве аргумента и возвращает true, если n является степенью числа 2, или false, в противном случае.
//Число n является степенью числа 2, если существует целое число k, такое что
// 
//Указание к решению. Метод Math.log2(n) возвращает двоичный (по основанию 2) логарифм числа n.
//Т.е. Math.log2(n) - это степень, в которую надо возвести число 2, чтобы получить число n.
//Таким образом, если Math.log2(n) - это целое число, значит, n является степенью числа 2.
//Решение задачи заключается в проверке, является ли Math.log2(n) целым числом.
//Проверить, что число x является целым, можно с помощью условия x % 1 === 0 (это условие истинно для целых чисел и ложно для нецелых чисел).
function isPowerOfTwo(n){
  return Math.log2(n) % 1 === 0;
}


//2.	Является ли данное число n степенью числа 10?
//Напишите функцию с именем isPowerOfTen, которая принимает неотрицательное число n в качестве аргумента и возвращает true, если n является степенью числа 10, или false, в противном случае.
function isPowerOfTen(n){
  return Math.log10(n) % 1 === 0;
}

//3.	Количество значений в массиве, являющихся степенью числа 2 или степенью числа 10.

//Напишите функцию countPowersInArray, которая принимает массив arr в качестве аргумента и возвращает количество элементов массива, являющихся степенью числа 2 или степенью числа 10.
function countPowersInArray(arr){
  let cnt = 0;
  for ( let i = 0; i < arr.length; i++){
    if (Math.log10(arr[i]) % 1 === 0 || Math.log2(arr[i]) % 1 === 0) cnt++;
  }
  return cnt;  
}
