
//1. Измените число, если оно положительное. 
//Напишите функцию с именем changeNumber, которая принимает число num в качестве аргумента и увеличивает его на 8, если число положительное, и не изменяет его в противном случае.

function changeNumber(num){
  return num > 0 ? num * 8 : num;
}
//1.	Знак числа.
function numberSign(num){
 if(num > 0 ) return "plus";
 else if(num < 0) return "minus";
 return null;
}

//2.	Положительное, отрицательное или ноль?

function numberDescription(num){
 if(num > 0 ) return "positive";
 else if(num < 0) return "negative";
 return "zero";
}
3.	Четное или нечетное?

    function evenOrOdd(num){
return num % 2 === 0 ? "even" :"odd"  }
4.	Является ли трехзначное число палиндромом?

function isPalindrome(num){
  let str = num + '';
  return str[0] === str[2] ? "palindrome" : "not a palindrome"    }
//5.	Имеет ли квадратное уравнение действительные корни?

function equationHasRoots(a, b, c){
let d = b ** 2 - 4 * a * c;
return d >= 0 ? "The equation has roots" : "The equation has no roots";    }

//6.	Измените число в зависимости от его знака.

function changeNumber(num){
return num > 0 ? num * 2 : num / 2;   }

//7.	Количество положительных чисел в наборе

function countOfPositive(a, b, c){
let count = 0;
if (a > 0) count++;
if (b > 0) count++;
if (c > 0) count++;
return count;   }
//8.	Количество положительных и количество отрицательных чисел в наборе

function countOfPosAndNeg(a, b, c){
let countOfPositive = 0;
let countOfNegative = 0;
if (a > 0) {countOfPositive++;}
else if (a < 0){countOfNegative++;}
if (b > 0)  {countOfPositive++;}
else if (b < 0) {countOfNegative++;}
if (c > 0) {countOfPositive++;}
else if (c < 0) {countOfNegative++;}
return [countOfPositive, countOfNegative];      }
//9.	Большее из двух чисел

function largerOfTwo(a, b){
return a >= b ? a :b;     }
//10.	Меньшее число и его порядковый номер.

function smallerOfTwo(a, b){
if (a <= b) return [a, 1];
return [b, 2];    }
//11.	Выведите числа в порядке убывания.

function putInOrder(a, b){
return (a  >= b) ? [a,b] : [b,a];
}
//12.	Меньшее из трех чисел

function minOfThree(a, b, c){
if(a<=b && a<=c) return a;
if(b<=a && b<=c) return b;
if(c<=a && c<=b) return c;
//13.	Не самое большое и не самое маленькое число

function middleOfThree(a, b, c){
if (((a > b) && (a < c)) || ((a < b) && (a > c))) return a;
if (((b > a) && (b < c)) || ((b < a) && (b > c))) return b;
return c;
//14.	Минимальное и максимальное их трех чисел.
function minAndMax(a, b, c){
if ((a > b) && (a > c)) { 
  if (b > c) return [c,a];
  else return [b,a]
  }
if ((b > a) && (b > c)) { 
  if (a > c) return [c,b];
  else return [a,b]
  }
if ((c > b) && (c > a)) { 
  if (a > b) return [b,c];
  else return [a,c]
  }

//15.	Сумма двух наибольших чисел.

function sumOfTwoLargest(a, b, c){
if(a <= b && a <= c ) return b + c;
if(b <= a && b <= c ) return a + c;
return a + b;
//16.	Новые значения трех величин
function newValues(a, b, c){
return (a < b) && (b < c) ? [a*2,b*2,c*2] : [-a,-b,-c]

//17.	Найти порядковый номер величины, отличающейся от двух других

function orderNumberOfDifferentValue(a, b, c){
if (a === b && a !==c ) return 3;
if (a === c && a !==b ) return 2;
if (c === b && a !==b ) return 1;
//18.	У какой фигуры площадь больше?

function areaComparison(r, a){
let sC = Math.PI * r ** 2;
let sS = a ** 2;
if (sC > sS) return "circle";
else if (sC < sS) return "square";
    else return "the same";
//19.	Какая точка ближе к началу координат?

function distanceComparison(x1, y1, x2, y2){
let r1 = (x1 ** 2 + y1 ** 2) ** 0.5;
let r2 = (x2 ** 2 + y2 ** 2) ** 0.5;
if (r1 < r2 ) return 1;
if (r1 > r2 ) return 2;
return 0;
