Число ли это?
Разберемся, что такое NaN и в каких случаях результат будет ему равен.
1.	Из списка выражений выберите "не число"
let notANumber = 'Two' * 2;

2.	Создайте переменную со значением NaN
Создайте переменную с именем str, присвойте ей значение 'apple'.
Создайте переменную с именем nan, присвойте значение выражения, которое выполняет преобразование строки str в число (с помощью операции унарный плюс).
let str = 'apple';
let nan = +str;


3.	Из списка выражений выберите те, которые не равны NaN

Из данного набора выражений выберите те, значение которых не равны NaN, и создайте массив arr из этих значений, не изменяя их порядок.
'July' + 31;
'Three' + 'Two';
+'One' * +'Five' 
'to be' || !'to be';
'Two' * 'Two'; 
'NaN';
NaN + 2 

let arr = ['July' + 31, 'Three' + 'Two', 'to be' || !'to be','NaN'];

******************* ***************** *************** *
Number.isNaN() и isNaN() – проверка на NaN
1.	Хранит ли аргумент функции значение NaN?
функцию isValid, которое проверяет, содержит ли аргумент value значение NaN.
function isValid(value){
return Number.isNaN(value) ? "Value is not a number" : "Value is valid";
}

2.	Является ли величина NaN?
 функцию isArgNaN, которое проверяет, содержит ли аргумент value значение NaN.
Если аргумент является NaN, возвратить значение NaN.
В противном случае возвратить значение величины value.
function isArgNaN(value){
return isNaN(value) ? NaN : value ;
}


******************* ***************** *************** *
Сравнение c NaN
1. Подсчитайте количество значений NaN в массиве
Напишите функцию countNaN, которая принимает массив arr в качестве аргумента и возвращает количество элементов массива, имеющих значение NaN.
function countNaN(arr){
  let cnt = 0;
  for (let i = 0; i < arr.length; i++){
      if (Number.isNaN(arr[i])) cnt++;
  }
  return cnt;
}
	2. Если аргумент функции - NaN   

Напишите функцию multBy5, которая принимает величину value в качестве аргумента, и если это NaN, возвращает строку "Value is NaN", иначе умножает величину на 5.
function multBy5(value){
  return Number.isNaN(value) ? "Value is NaN" : value * 5;
}


******************* ***************** *************** *
Плюс, минус бесконечность
1. Подсчитайте количество бесконечных значений в массиве 
Напишите функцию countInfinity, которая принимает массив arr в качестве аргумента и возвращает количество элементов массива, не являющихся конечными.
function countInfinity(arr){
  let cnt = 0;
  for (let i = 0; i < arr.length; i++){
      if (!Number.isFinite(arr[i])) cnt++;
  }
  return cnt;
}
2. Является ли результат операции деления двух чисел конечным числом? 
Напишите функцию checkingForFinite, которая принимает две числа a и b в качестве аргументов, выполняет деление числа a на число b и проверяет результат деления (частное чисел) на конечность. Функция должна возвратить true, если результат - конечное число, и false - в противном случае.
function checkingForFinite(a, b){
  return Number.isFinite(a / b) ? true : false;
}



******************* ***************** *************** *
Неточность вычисления с очень большими и очень маленькими числами

1.	Является ли целое число безопасным числом для вычислений?
Напишите функцию safeNumber, которая принимает целое число x, и возвращает true, если переменная x содержит безопасное целочисленное значение, и false - в противном случае.
function safeNumber(x){
return Number.isSafeInteger(x);
}

2.	Подсчитайте количество безопасных значений в массиве
Напишите функцию countOfSafeNumbers, которая принимает массив arr в качестве аргумента и возвращает количество элементов массива, являющихся числами, безопасными для вычислений.
function countOfSafeNumbers(arr){
  let cnt = 0;
  for (let i = 0; i < arr.length; i++){
      if (Number.isSafeInteger(arr[i])) cnt++;
  }
  return cnt;
}

3.	Является ли произведение двух чисел безопасным числом?
Напишите функцию checkingForfSafe, которая принимает две величины a и b в качестве аргументов, выполняет умножение числа a на число b, и проверяет, является ли произведение безопасным числом. Функция должна возвратить true, если произведение чисел - безопасное число, и false - в противном случае.
function checkingForfSafe(a, b){
return Number.isSafeInteger(a * b) ;
}

4.	Верно ли, что 0.1 + 0.2 === 0.3? Все не так просто!

Напишите функцию isSumEqualsNumber, которая принимает три дробных числа a, b, c в качестве аргументов, и проверяет, верно ли, что сумма двух дробных чисел равна третьему дробному числу, т.е. равна ли сумма чисел a и b числу c.
Функци должна возвратить true (если сумма чисел после округления равна третьему числу) или false - в противном случае
function isSumEqualsNumber(a, b, c){
return +(a + b).toFixed(2) === +c.toFixed(2);
}
